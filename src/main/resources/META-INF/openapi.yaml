openapi: 3.0.1
info:
  title: Redcat 🐱
  description: Exposes multi purpose REST API. Persists to DB, broadcast changes to Kafka
  version: "1.3"

servers:
  - url: http://localhost:8092/
    description: local dev
  - url: https://redcat.taaja.io/
    description: production

paths:
  /dev/example/{className}:
    get:
      parameters:
        - name: className
          in: path
          required: true
          schema:
            type: string
            enum: [Area, Corridor, SpatialEntity, SpatialDataUpdate, SpatialOperation, LocationInformation]
          description: >
            Type of the returned data
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UniSpatialOperation'
                  - $ref: '#/components/schemas/UniObject'
                  - $ref: '#/components/schemas/UniSpatialDataUpdate'
  /v1/extension:
    post:
      requestBody:
        description: >
          Needs a SpatialEntity as Body.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialEntity'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialOperation'
  /v1/extension/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            default: "c56b3543-6853-4d86-a7bc-1cde673a5582"
          description: >
            Id of the SpatialEntity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialEntity'
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: >
            Id of the SpatialEntity (must fit the id in the submitted body - if one is present)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialEntity'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialOperation'
    delete:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: >
            Id of the SpatialEntity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialOperation'
    patch:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: >
            Id of the SpatialEntity (must fit the id in the submitted body - if one is present)
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniSpatialDataUpdate'

components:
  schemas:
    UniSpatialOperation:
      type: object
      properties:
        publisherId:
          type: string
        intersectingExtensions:
          $ref: '#/components/schemas/ListString'
        operationType:
          $ref: '#/components/schemas/OperationType'
        targetId:
          type: string
        timestamp:
          $ref: '#/components/schemas/Date'
    ExtensionBehaviour:
      enum:
        - Default
        - ExclusionZone
        - TrafficZone
      type: string
    UniObject:
      type: object
      properties:
        actuators:
          type: object
        created:
          $ref: '#/components/schemas/Date'
        extensionBehaviour:
          $ref: '#/components/schemas/ExtensionBehaviour'
        _id:
          type: string
        priority:
          format: int32
          type: integer
        properties:
          type: object
        samplers:
          type: object
        sensors:
          type: object
        validFrom:
          $ref: '#/components/schemas/Date'
        validUntil:
          $ref: '#/components/schemas/Date'
    UniSpatialDataUpdate:
      type: object
      properties:
        publisherId:
          type: string
        actuators:
          type: object
        samplers:
          type: object
        sensors:
          type: object
    ListString:
      type: array
      items:
        type: string
    OperationType:
      enum:
        - Altered
        - Created
        - Removed
        - Unchanged
      type: string
    Date:
      format: date
      type: string